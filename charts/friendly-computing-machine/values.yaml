image:
  name: "ghcr.io/whale-net/friendly-computing-machine"
  tag: ""

namespace: fcm

deployment:
  name: ""
  replicas: 1

  health:
    enabled: true

# Argo CD specific configuration
argocd:
  # Enable Argo CD specific features and annotations
  enabled: false
  # Use Argo CD sync waves instead of Helm hooks for ordering
  # When enabled, migration job runs in sync wave -10, deployments in wave 0
  # This automatically skips Helm hooks to avoid conflicts
  useSyncWaves: false
  # Sync wave for migration job (lower numbers run first)
  # Default -10 ensures migrations run before deployments (wave 0)
  migrationSyncWave: -10

temporal:
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 128Mi

taskpool:
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 128Mi
  health:
    enabled: true

subscribe:
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 128Mi

env:
  app_env: dev
  db:
    url: <postgresql+psycopg2://user:password@host:port/database>
  slack:
    botToken: <slack_bot_token>
    appToken: <slack_app_token>
  google:
    api_key: <google_api_key>
  rabbitmq:
    host: <rabbitmq_host>
    port: 5672
    user: <rabbitmq_user>
    password: <rabbitmq_password>
    enableSsl: false
    sslHostname: <ssl_hostname>
  otelCollector:
    logs:
      endpoint: <logs_endpoint>
    traces:
      endpoint: <traces_endpoint>
  temporal:
    host: <temporal_host>
  manman:
    host: <manman_host>
#    metrics:
#      endpoint: <metrics_endpoint>
