{
  "openapi": "3.1.0",
  "info": {
    "title": "ManMan Experience API",
    "version": "0.1.0"
  },
  "paths": {
    "/worker/current": {
      "get": {
        "summary": "Worker Current",
        "operationId": "worker_current_worker_current_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Worker"
                }
              }
            }
          }
        }
      }
    },
    "/gameserver": {
      "get": {
        "summary": "Get Game Servers",
        "description": "Get all game server configs\n\nAlthough it seems strange for us to return configs instead of instances,\nthis is the way the API is designed. We want to make the /gameserver/ endpoint\nthe way you would interact with a game server. The whole instance thing\nshould be abstracted away from the user.\n\n:return: list of game server configs",
        "operationId": "get_game_servers_gameserver_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GameServerConfig"
                  },
                  "type": "array",
                  "title": "Response Get Game Servers Gameserver Get"
                }
              }
            }
          }
        }
      }
    },
    "/gameserver/{id}/start": {
      "post": {
        "summary": "Start Game Server",
        "description": "Given the game server config ID, start a game server instance\n\n:param id: game server config ID\n:param channel: rabbitmq channel\n:return: arbitrary response",
        "operationId": "start_game_server_gameserver__id__start_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/gameserver/{id}/stop": {
      "post": {
        "summary": "Stop Game Server",
        "description": "Given the game server config ID, stop a game server instance\n\nFinds the current worker, and sends a stop command to it\nIt is up to the worker to handle the command\nand stop the game server instance.\n\nThis endpoint provides an abstract gameserver interface\nto users, so they don't have to know about the worker\nand how it works\n\n:param id: game server config ID\n:param channel: rabbitmq channel\n:return: arbitrary response",
        "operationId": "stop_game_server_gameserver__id__stop_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/gameserver/{id}/stdin": {
      "post": {
        "summary": "Stdin Game Server",
        "description": "Send a stdin command to the game server config's running instance\n\nThis finds the current worker, and sends a stdin command to it\nIt is up to the worker to handle the command\nand send it to the game server instance.\n\nThis endpoint does not have a bheavior defined if no server is running.\n\n:param id: game server config ID\n:param channel: rabbitmq channel\n:param body: StdinCommandRequest\n:return: arbitrary response",
        "operationId": "stdin_game_server_gameserver__id__stdin_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StdinCommandRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/gameserver/instances/active": {
      "get": {
        "summary": "Get Active Game Server Instances",
        "description": "Get all active game server instances for the current worker.",
        "operationId": "get_active_game_server_instances_gameserver_instances_active_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentInstanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Health Health Get"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CurrentInstanceResponse": {
        "properties": {
          "game_server_instances": {
            "items": {
              "$ref": "#/components/schemas/GameServerInstance"
            },
            "type": "array",
            "title": "Game Server Instances"
          },
          "workers": {
            "items": {
              "$ref": "#/components/schemas/Worker"
            },
            "type": "array",
            "title": "Workers"
          },
          "configs": {
            "items": {
              "$ref": "#/components/schemas/GameServerConfig"
            },
            "type": "array",
            "title": "Configs"
          }
        },
        "type": "object",
        "required": [
          "game_server_instances",
          "workers",
          "configs"
        ],
        "title": "CurrentInstanceResponse",
        "description": "Response to the worker to start a game server instance."
      },
      "GameServerConfig": {
        "properties": {
          "game_server_config_id": {
            "type": "integer",
            "title": "Game Server Config Id"
          },
          "game_server_id": {
            "type": "integer",
            "title": "Game Server Id"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "default": false
          },
          "is_visible": {
            "type": "boolean",
            "title": "Is Visible",
            "default": true
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "executable": {
            "type": "string",
            "title": "Executable"
          },
          "args": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Args"
          },
          "env_var": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Env Var"
          }
        },
        "type": "object",
        "required": [
          "game_server_config_id",
          "game_server_id",
          "name",
          "executable",
          "args",
          "env_var"
        ],
        "title": "GameServerConfig"
      },
      "GameServerInstance": {
        "properties": {
          "game_server_instance_id": {
            "type": "integer",
            "title": "Game Server Instance Id"
          },
          "game_server_config_id": {
            "type": "integer",
            "title": "Game Server Config Id"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "worker_id": {
            "type": "integer",
            "title": "Worker Id"
          },
          "last_heartbeat": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Heartbeat"
          }
        },
        "type": "object",
        "required": [
          "game_server_instance_id",
          "game_server_config_id",
          "end_date",
          "worker_id",
          "last_heartbeat"
        ],
        "title": "GameServerInstance"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "StdinCommandRequest": {
        "properties": {
          "commands": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Commands"
          }
        },
        "type": "object",
        "required": [
          "commands"
        ],
        "title": "StdinCommandRequest",
        "description": "Request to send to the worker to start a game server instance."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "Worker": {
        "properties": {
          "worker_id": {
            "type": "integer",
            "title": "Worker Id"
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "title": "Created Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "last_heartbeat": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Heartbeat"
          }
        },
        "type": "object",
        "required": [
          "worker_id",
          "end_date",
          "last_heartbeat"
        ],
        "title": "Worker"
      }
    }
  }
}
